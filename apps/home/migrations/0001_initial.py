# Generated by Django 3.2.16 on 2023-01-03 13:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceIp', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=100)),
                ('deviceName', models.CharField(max_length=20)),
                ('truview_if_id', models.IntegerField()),
                ('tvfIfId', models.IntegerField(default=0.0)),
                ('ifIndex', models.IntegerField(default=0.0)),
                ('name', models.CharField(max_length=20)),
                ('in_bw', models.FloatField(default=0.0)),
                ('out_bw', models.FloatField(default=0.0)),
                ('avg_congestion_in', models.FloatField(default=0.0)),
                ('avg_congestion_out', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zonegeo', models.CharField(default='', max_length=20)),
                ('site_name', models.CharField(max_length=20)),
                ('truview_site_id', models.IntegerField()),
                ('in_bw', models.FloatField(default=0.0)),
                ('out_bw', models.FloatField(default=0.0)),
                ('avg_congestion_in', models.FloatField(default=0.0)),
                ('avg_congestion_out', models.FloatField(default=0.0)),
                ('provider', models.CharField(choices=[('-----', '-----'), ('TATA', 'TATA'), ('SITA', 'SITA'), ('SONEMA', 'SONEMA'), ('GTT', 'GTT')], default='-----', help_text='Provider', max_length=20)),
                ('service', models.CharField(choices=[('-----', '-----'), ('TATA', 'TATA'), ('SITA', 'SITA'), ('SONEMA', 'SONEMA'), ('GTT', 'GTT')], default='-----', help_text='Service', max_length=20)),
            ],
            options={
                'unique_together': {('zonegeo', 'site_name')},
            },
        ),
        migrations.CreateModel(
            name='OutInterfaceBurst',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('site_name', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('OutBurst1', models.FloatField(default=0.0)),
                ('OutBurst2', models.FloatField(default=0.0)),
                ('OutBurst3', models.FloatField(default=0.0)),
                ('OutBurst4', models.FloatField(default=0.0)),
                ('Burst3', models.IntegerField(default=0)),
                ('Burst4', models.IntegerField(default=0)),
                ('applications', models.TextField()),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.interface', verbose_name='Interface')),
            ],
        ),
        migrations.AddField(
            model_name='interface',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.site', verbose_name='Site'),
        ),
        migrations.CreateModel(
            name='InInterfaceBurst',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('site_name', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('InBurst1', models.FloatField(default=0.0)),
                ('InBurst2', models.FloatField(default=0.0)),
                ('InBurst3', models.FloatField(default=0.0)),
                ('InBurst4', models.FloatField(default=0.0)),
                ('Burst3', models.IntegerField(default=0)),
                ('Burst4', models.IntegerField(default=0)),
                ('applications', models.TextField()),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.interface', verbose_name='Interface')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationPerInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('TxOctets', models.FloatField(default=0.0)),
                ('RxOctets', models.FloatField(default=0.0)),
                ('TotalOctets', models.FloatField(default=0.0)),
                ('app_name', models.CharField(max_length=20)),
                ('router_name', models.CharField(max_length=20)),
                ('if_name', models.CharField(max_length=20)),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.interface', verbose_name='Interface')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truview_app_id', models.IntegerField()),
                ('app_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'unique_together': {('truview_app_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AppInterfaceThrouput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('if_name', models.CharField(default='', max_length=50)),
                ('router_name', models.CharField(max_length=50)),
                ('app', models.CharField(max_length=20)),
                ('tx_throuput', models.FloatField(default=0.0)),
                ('rx_throuput', models.FloatField(default=0.0)),
                ('total_throuput', models.FloatField(default=0.0)),
                ('inburst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inburst', to='home.ininterfaceburst', verbose_name='InInterfaceBurst')),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interface', to='home.interface', verbose_name='Interface')),
                ('outburst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outburst', to='home.outinterfaceburst', verbose_name='OutInterfaceBurst')),
            ],
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('truview_router_id', models.IntegerField()),
                ('in_bw', models.FloatField(default=0.0)),
                ('out_bw', models.FloatField(default=0.0)),
                ('avg_congestion_in', models.FloatField(default=0.0)),
                ('avg_congestion_out', models.FloatField(default=0.0)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='home.site', verbose_name='Site')),
            ],
            options={
                'unique_together': {('name',)},
            },
        ),
        migrations.AlterUniqueTogether(
            name='interface',
            unique_together={('truview_if_id', 'name')},
        ),
    ]
